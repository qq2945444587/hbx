{"version":3,"sources":["uni-app:///main.js",null,"webpack:///E:/测试/ShopXO开源商城uniapp端源码/App.vue?4027","uni-app:///App.vue","webpack:///E:/测试/ShopXO开源商城uniapp端源码/App.vue?8c15","webpack:///E:/测试/ShopXO开源商城uniapp端源码/App.vue?3952"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","Vue","mixin","base","share","config","productionTip","App","mpType","app","$mount","globalData","data","cache_scene_key","cache_user_uuid_key","cache_config_info_key","cache_user_login_key","cache_user_info_key","cache_system_info_key","cache_buy_user_address_select_key","cache_launch_info_key","cache_userlocation_key","cache_page_pay_key","cache_prev_page_key","default_user_head_src","default_round_success_icon","default_round_error_icon","is_share_use_image","is_goods_bottom_opt_cart","is_goods_bottom_opt_back","is_realstore_top_nav_back","is_online_service_fixed","category_goods_model_icon_type","is_logo_use_text","tabbar_pages","request_url","static_url","system_type","application_title","application_describe","application_logo","version","currency_symbol","default_theme","launch_params_handle","params","is_current_single_page","get_scene_data","set_scene_data","uni","get_system_info","info","set_system_info","get_request_url","a","c","plugins_params","request_params_handle","get_user_info","get_user_cache_info","get_launch_cache_info","set_launch_cache_info","get_login_cache_info","user_auth_login","success","self","fail","user_login","user_login_handle","title","url","method","authcode","dataType","key","object","login_to_auth","content","confirmText","cancelText","get_user_login_info","fields_check","get_timestamp","get_date","format","get_length","obj_len","price_two_decimal","pos_decimal","s_x","get_url_main_part","is_tabbar_pages","operation_event","appId","open_web_view","showToast","icon","duration","alert","showCancel","cancelColor","confirmColor","e","user_is_need_login","url_params_to_json","json","json_to_url_params","str","call_tel","phoneNumber","is_login_check","set_tab_bar_reddot","index","set_tab_bar_badge","page_share_handle","withShareTicket","desc","path","imageUrl","menus","get_config","value","init_config","is_key","is_config","clearInterval","count","map_gcj_to_bd","lng","lat","map_bd_to_gcj","open_location","name","address","scale","longitude","latitude","uuid","d","request_uuid","url_event","url_open","text_copy_event","image_show_event","current","urls","get_static_url","type","rpx_to_px","px_to_rpx","application_client","application_client_type","auth_check","scope","setTimeout","window_width_handle","window_height_handle","height","get_page_url","is_weixin_env","is_user_weixin_web_openid","page_url","window","get_application_title","get_application_describe","get_application_logo","share_content_handle","query","img","result","share_query_handle","is_single_page_check","current_page","prev_page","page_back_prev_event","page_url_handle","route","chat_entry_handle","user_auto_login_handle","remove_user_cache_event","onLaunch","onShow","methods"],"mappings":";;;;;;;;;;;;;;AAAA;AAE2D;AAC3D;AAGA;AACA;AAA6C;AAAA;AAN7C;AACAA,EAAE,CAACC,iCAAiC,GAAGC,mBAAmB;AAM1DC,YAAG,CAACC,KAAK,CAACC,aAAI,CAAC;AACfF,YAAG,CAACC,KAAK,CAACE,cAAK,CAAC;AAEhBH,YAAG,CAACI,MAAM,CAACC,aAAa,GAAG,KAAK;AAEhCC,YAAG,CAACC,MAAM,GAAG,KAAK;AAElB,IAAMC,GAAG,GAAG,IAAIR,YAAG,mBACZM,YAAG,EACR;AACF,UAAAE,GAAG,EAACC,MAAM,EAAE,C;;;;;;;;;;;;;AClBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACuD;AACL;AACa;;;AAG/D;AACyK;AACzK,gBAAgB,kLAAU;AAC1B,EAAE,yEAAM;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAinB,CAAgB,soBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;ACCroB;AAAA,eACA;EACAC;IACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC,eACA,sBACA,wCACA,oBACA,mBACA;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAC;IACA;IAEA;AACA;AACA;IACAC;MACA;MACA;;MAEA;MACA;QACAC;MACA;MACA;MACA;QACAA;MACA;;MAEA;MACA;QACAA;MACA;MAEA;IACA;IAEA;AACA;AACA;IACAC;MACA;MAEA;MAEA;IACA;IAEA;AACA;AACA;IACAC;MACA;IACA;IAEA;AACA;AACA;IACAC;MACA;MACAC;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;AACA;IACAC;MACA;MACA;QACAC;MACA;QACAA;MACA;MACA;QACA;MACA;MACA;IACA;IAEA;AACA;AACA;IACAC;MACA;MACAH;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACAI;MACAC;MACAC;;MAEA;MACA;MACA;QACAC;QACAD;QACAD;MACA;;MAEA;MACAT;MACA;QACAA;MACA;;MAEA;MACA;MACA;IACA;IAEA;AACA;AACA;AACA;IACAY;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;AACA;IACAC;MACA;MACA;QAEA;QACA;QAoBA;MACA;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;IACAC;MACA;MACA;QACA;QACA;MACA;;MAEA;MACA;QACA;MACA;MAEA;IACA;IAEA;AACA;AACA;IACAC;MACA;IACA;IAEA;AACA;AACA;IACAC;MACAhB;MACAI;MACA;IACA;IAEA;AACA;AACA;IACAa;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;AACA;IACAC;MACA;MAEAd;QACAe;UACA;UACA;YACAC;UACA;YACAA;UACA;QACA;QACAC;UACAjB;UACAgB;QACA;MACA;IAUA;IAEA;AACA;AACA;AACA;AACA;AACA;IACAE;MACA;MACA;QACA;MACA;QACA;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;IACAC;MAAA;MAAA;MACA;MACAnB;QACAoB;MACA;MACA;MAIApB;QACAe;UACA;YACAf;cACAqB;cACAC;cACA3D;gBACA4D;cACA;cACAC;cACAT;gBACAf;gBACA;kBACA;kBACA;kBACA;oBACAA;sBACAyB;sBACA9D;sBACAoD;wBACA;0BACAW;wBACA;sBACA;sBACAT;wBACAD;sBACA;oBACA;kBACA;oBACAhB;sBACAyB;sBACA9D;oBACA;oBACA;sBACAqD;oBACA;kBACA;gBACA;kBACAhB;kBACAgB;gBACA;cACA;cACAC;gBACAjB;gBACAgB;cACA;YACA;UACA;QACA;QACAC;UACAjB;UACAgB;QACA;MACA;IACA;IAEA;AACA;AACA;IACAW;MACA3B;QACAoB;QACAQ;QACAC;QACAC;QACAf;UACA;YACAf;cACAqB;YACA;UACA;QACA;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;IACAU;MACA;MACA;MACA;;MAEA;MACA;QACA;QACA;QACA;QACA;MACA;;MAEA;MACA/B;QACAoB;MACA;MACA;MACApB;QACAqB;QACAC;QACA3D;QACA6D;QACAT;UACAf;UACA;YACAA;cACAyB;cACA9D;cACAoD;gBACA;kBACAW;gBACA;cACA;cACAT;gBACAD;cACA;YACA;UACA;YACAA;UACA;QACA;QACAC;UACAjB;UACAgB;QACA;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;IACAgB;MACA;QACA;QACA;QACA,iGACA;UACA;UACA;QACA;MACA;MACA;IACA;IAEA;AACA;AACA;IACAC;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;IACAC;MACA;MACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;MACA;QACAC;MACA;MACA;QACA;UACAA;QACA;MACA;MAEA;IACA;IAEA;AACA;AACA;AACA;IACAC;MACA;MACA;QACA;MACA;QACA;QACA;UACAC;QACA;QACA;MACA;MACA;IACA;IAEA;AACA;AACA;AACA;IACAC;MACA;MACA;QACA;MACA;MACA;MACA;MACA;MACA;QACAC;QACAC;MACA;MACA;QACAA;MACA;MACA;IACA;IAEA;IACAC;MACA;QACA;MACA;QACA;QACA;MACA;MACA;IACA;IAEA;AACA;AACA;IACAC;MACA;MACA;QACA;MACA;MACA;MACA;QACA;UACA;QACA;MACA;MACA;IACA;IAEA;AACA;AACA;IACAC;MACA;MACA;MACA;QACA;UACA;UACA;YACA;YACA;UACA;UACA;YACA;cACA3C;gBACAqB;cACA;YACA;cACArB;gBACAqB;cACA;YACA;YACA;UACA;UACA;YACArB;cACA4C;YACA;YACA;UACA;UACA;YACA;YACA;cACA;cACA;YACA;YACA;YACA;UACA;UACA;YACA;YACA;QAAA;MAEA;IACA;IAEA;AACA;AACA;AACA;IACAC;MACA7C;QACAqB;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;IACAyB;MACA;QACA9C;UACA+C;UACA3B;UACA4B;QACA;MACA;QACAhD;UACA+C;UACA3B;UACA4B;QACA;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACAC;MACA;MACA;QACA;QACA;QACA;QACA;QACA;QACA;QACAjD;UACAoB;UACAQ;UACAsB;UACApB;UACAqB;UACAtB;UACAuB;UACArC;YACA;cACAsC;YACA;UACA;QACA;MACA;QACArC;MACA;IACA;IAEA;AACA;AACA;AACA;IACAsC;MACA;MACA;QACA;MACA;MACA;MACA;QACA;UACA;QACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;QACA;QACA;UACA;UACAC;QACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;QACA;UACAC;QACA;QACAA;MACA;MACA;IACA;IAEA;IACAC;MACA;QACA3D;UACA4D;QACA;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;IACAC;MACA;QACA7D;QACA;QACA;MACA;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;IACA8D;MACA;QACA;UACA9D;YACA+D;UACA;QACA;UACA/D;YACA+D;UACA;QACA;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;AACA;IACAC;MACA;QACA;UACAhE;YACA+D;UACA;QACA;UACA/D;YACA+D;YACA;UACA;QACA;MACA;IACA;IAEA;IACAE;MAAA;MACA;MACA;MACA;;MAEA;MACA;QACA9G;MACA;MACA;MACA;QACAA;MACA;MACA;MACAA;;MAGA;MACA;MACA;MACA;QACA6C;UACAkE;UACA9C;UACA+C;UACAC;UACAC;UACAC;QACA;MACA;QACAzH;UACAyH;QACA;MACA;IA2EA;IAEA;AACA;AACA;AACA;AACA;IACAC;MACA;MACA;MACA;QACA;QACA;QACA;UACAC;QACA;UACAA;UACA;YACA;cACAA;YACA;cACAA;cACA;YACA;UACA;QACA;MACA;MACA;MACA;QACAA;MACA;MACA;MACA;QACA;UACA;UACA;YACAA;YACA;QAAA;MAEA;MACA;IACA;IAEA;IACAC;MAAA;MACAzE;QACAqB;QACAC;QACA3D;UAAA+G;QAAA;QACAlD;QACAT;UACA;YACAf;cACAyB;cACA9D;cACAsD;gBACA;cACA;YACA;;YAEA;YACA;UACA;YACA;UACA;QACA;QACAA;UACA;QACA;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;IACA0D;MACA;MACA;MACA;QACA;UACAC;UAEA;YACAlD;UACA;QACA;QACAmD;QAEA;UACAD;QACA;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;IACAE;MACAC;MACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;QACAD;QACAC;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;IACAC;MACAF;MACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;QACAD;QACAC;MACA;IACA;IAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACAE;MAMA;QACA;QACA;MACA;;MAEA;MACAlF;QACAmF;QACAC;QACAC;QACAC;QACAC;MACA;IACA;IAEA;IACAC;MACA;MACA;QACA;QACAC;QACA;MACA;IACA;IAEA;IACAC;MAAA;MACA;MACA;QACAF;QACAxF;UACAyB;UACA9D;UACAsD;YACA;UACA;QACA;MACA;MACA;IACA;IAEA;IACA0E;MACA;MACA;MACA;IACA;IAEA;IACAC;MAAA;MACA;QACA;QACA;UACA;QACA;UACA;YACA5F;cACAqB;YACA;UACA;YACA;cACArB;gBACAqB;cACA;YACA;cACArB;gBACAqB;cACA;YACA;UACA;QACA;MACA;IACA;IAEA;IACAwE;MACA;MACA;QACA;QACA7F;UACArC;UACAoD;YACAf;cACAe;gBACAC;cACA;YACA;UACA;QACA;MACA;QACA;MACA;IACA;IAEA;IACA8E;MACA;MACA;QACA9F;UACA+F;UACAC;QACA;MACA;QACA;MACA;IACA;IAEA;IACAC;MACA;MACA;QACAC;MACA;;MAEA;MACA;QACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEA;IACAC;MACA;IACA;IAEA;IACAC;MACA;IACA;IAEA;IACAC;MACA;MAKAH;MAEA;IACA;IAEA;IACAI;MACA;MAEA9B;MAoBA;IACA;IAEA;IACA+B;MACA;MACAvG;QACAe;UACA;YACAf;cACAwG;cACAzF;gBACA;kBACAW;gBACA;cACA;cACAT;gBACAD;gBACAyF;kBACAzG;gBACA;cACA;YACA;UACA;YACA;cACA0B;YACA;UACA;QACA;MACA;IACA;IAEA;IACAgF;MAMA;IACA;IAEA;IACAC;MACA;MACA;MACA;QACAC;MACA;MACA;MACA;QACAA;MACA;MACA;MACA;QACAA;MACA;MACA;IACA;IAEA;IACA;IACAC;MAAA;MAEA;MAKA;QACA;QACAxF;MACA;MACA;IACA;IAEA;IACAyF;MACA;MACA;QACA;MACA;MACA;IACA;IAEA;IACAC;MAAA;MACA;MACA;QACA;QACA;UACA;UACA;UACA;YACA/G;cACAoB;YACA;YACApB;cACAqB;cACAC;cACA3D;cACA6D;cACAT;gBACAf;gBACA;kBACAA;gBACA;kBACA;gBACA;cACA;cACAiB;gBACAjB;gBACA;cACA;YACA;YACA;UACA;YACAA;YACA;YACAgH;YACAA;YACA;YACA;YACAC;UACA;UACA;QACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;MACA;QACA1C;MACA;MACA;MACA;QACAA;MACA;MACA;IACA;IAEA;IACA2C;MACA;MACA;MACA;MACA;QACA3C;MACA;MACA;MACA;QACAA;MACA;MACA;IACA;IAEA;IACA4C;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;QACAjG;QACA+C;QACAC;QACAkD;QACAC;MACA;MACAC;MAIA;IACA;IAEA;IACAC;MACA;QACA;QACA;UACA;UACAH;QACA;MACA;MACA;IACA;IAEA;IACAI;MACA;QACA;QACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;MACA;MACA;QACApD;MACA;MACA;IACA;IAEA;IACAqD;MACA;MACA;QACA7H;UAAAqB;QAAA;MACA;QACArB;MACA;IACA;IAEA;IACA8H;MACA;MACA;MACA;MACA;QACA;UACAR;QACA;MACA;MACA;QACAS;MACA;MACA;IACA;IAEA;IACAC;MACA;QACA;MACA;QACA;QACA3G;;QAEA;QACA;QACAA;;QAEA;QACA;MACA;IACA;IAEA;IACA4G,2DA8BA;IAEA;IACAC;MACA;MACAlI;MACA;MACAA;;MAEA;MACA;MACA;MACAyG;QACAzG;UAAAqB;QAAA;MACA;IACA;EACA;EAEA;AACA;AACA;EACA8G;EAEA;AACA;AACA;EACAC;IACA;IACA;;IAEA;IACA;;IAEA;IACA;;IAEA;IACA;EACA;EAEAC;AACA;AAAA,2B;;;;;;;;;;;;;AC5jDA;AAAA;AAAA;AAAA;AAA24B,CAAgB,q4BAAG,EAAC,C;;;;;;;;;;;ACA/5B;AACA,OAAO,KAAU,EAAE,kBAKd","file":"common/main.js","sourcesContent":["import 'uni-pages';\r\n// @ts-ignore\r\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;import Vue from 'vue';\r\nimport App from './App';\r\n\r\n// 全局mixins\r\nimport base from './common/js/common/base';\r\nimport share from './common/js/common/share';\r\nVue.mixin(base);\r\nVue.mixin(share);\r\n\r\nVue.config.productionTip = false;\r\n\r\nApp.mpType = 'app';\r\n\r\nconst app = new Vue({\r\n    ...App\r\n});\r\napp.$mount();","var render, staticRenderFns, recyclableRender, components\nvar renderjs\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"App.vue\"\nexport default component.exports","import mod from \"-!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./App.vue?vue&type=script&lang=js&\"","<script>\r\n    import base64 from './common/js/lib/base64.js';\r\n    export default {\r\n        globalData: {\r\n            data: {\r\n                // 场景值\r\n                cache_scene_key: \"cache_scene_key\",\r\n                // uuid缓存key\r\n                cache_user_uuid_key: \"cache_user_uuid_key\",\r\n                // 配置信息缓存key\r\n                cache_config_info_key: \"cache_config_info_key\",\r\n                // 用户登录缓存key\r\n                cache_user_login_key: \"cache_user_login_key\",\r\n                // 用户信息缓存key\r\n                cache_user_info_key: \"cache_shop_user_info_key\",\r\n                // 设备信息缓存key\r\n                cache_system_info_key: \"cache_shop_system_info_key\",\r\n                // 用户地址选择缓存key\r\n                cache_buy_user_address_select_key: \"cache_buy_user_address_select_key\",\r\n                // 启动参数缓存key\r\n                cache_launch_info_key: \"cache_shop_launch_info_key\",\r\n                // 获取位置选择缓存key\r\n                cache_userlocation_key: \"cache_userlocation_key\",\r\n                // 页面支付临时缓存key\r\n                cache_page_pay_key: \"cache_page_pay_key\",\r\n                // 上一页地址缓存key\r\n                cache_prev_page_key: 'cache_prev_page_key',\r\n                // 默认用户头像\r\n                default_user_head_src: \"/static/images/common/user.png\",\r\n                // 成功圆形提示图片\r\n                default_round_success_icon: \"/static/images/common/round-success-icon.png\",\r\n                // 错误圆形提示图片\r\n                default_round_error_icon: \"/static/images/common/round-error-icon.png\",\r\n                // 分享及转发使用页面设置的默认图片及系统默认图片（0 否, 1 是）\r\n                is_share_use_image: 1,\r\n                // 商品详情页底部导航是否开启购物车功能（0 否, 1 是）\r\n                is_goods_bottom_opt_cart: 1,\r\n                // 商品详情页底部导航存在指定返回参数[is_opt_back=1]展示返回按钮（0 否, 1 是）\r\n                is_goods_bottom_opt_back: 1,\r\n                // 门店详情顶部导航返回按钮（0 否, 1 是）\r\n                is_realstore_top_nav_back: 1,\r\n                // 开启浮动客服、前提是后台需要开启客服功能（0 否, 1 是）\r\n                is_online_service_fixed: 1,\r\n                // 分类页面商品列表模式一级分类使用图标类型（0 大图片, 1 icon图标）\r\n                category_goods_model_icon_type: 0,\n                // 强制使用文字作为logo（默认后台站点设置手机端图片logo->当前指定logo->后台手机管理小程序配置名称->站点设置中的站点名称）\n                is_logo_use_text: 0,\r\n                // tabbar页面\r\n                tabbar_pages: [\r\n                    \"/pages/index/index\",\r\n                    \"/pages/goods-category/goods-category\",\r\n                    \"/pages/cart/cart\",\r\n                    \"/pages/user/user\"\r\n                ],\r\n                // 请求地址\r\n                request_url: 'https://d1.shopxo.vip/',\r\n                // 静态资源地址（如系统根目录不在public目录下面请在静态地址后面加public目录、如：https://d1.shopxo.vip/public/）\r\n                static_url: 'https://d1.shopxo.vip/',\r\n                // 系统类型（默认default、如额外独立小程序、可与程序分身插件实现不同主体小程序及支付独立）\r\n                system_type: 'default',\r\n                // 基础信息\r\n                application_title: 'ShopXO',\r\n                application_describe: '企业级B2C开源电商系统！',\n                // 默认logo、如 /static/images/common/logo.png\n                application_logo: '',\r\n                // 版本号\r\n                version: 'v2.3.2',\r\n                // 货币价格符号\r\n                currency_symbol: '￥',\r\n                // 主题类型        主题颜色\r\n                // 黄色 yellow    #f6c133\r\n                // 红色 red       #ff0036\r\n                // 黑色 black     #333333\r\n                // 绿色 green     #20a53a\r\n                // 橙色 orange    #fe6f04\r\n                // 蓝色 blue      #1677ff\r\n                // 棕色 brown     #8B4513\r\n                // 紫色 purple    #623cec\r\n                default_theme: 'yellow'\r\n            },\r\n\r\n            /**\r\n             * 启动参数处理\r\n             */\r\n            launch_params_handle(params) {\r\n                // 原有缓存\r\n                var cache_params = this.get_launch_cache_info();\r\n\r\n                // 当前参数、从query读取覆盖\r\n                if ((params.query || null) != null) {\r\n                    params = params.query;\r\n                }\r\n                // query下scene参数解析处理\r\n                if ((params.scene || null) != null) {\r\n                    params = this.url_params_to_json(decodeURIComponent(params.scene));\r\n                }\r\n                \r\n                // 原始缓存是否存在邀请id、邀请使用最开始的用户id\r\n                if(cache_params != null && (cache_params.referrer || null) != null) {\r\n                    params['referrer'] = cache_params.referrer;\r\n                }\r\n\r\n                return params;\r\n            },\r\n            \r\n            /**\r\n             * 当前是否单页模式\r\n             */\r\n            is_current_single_page() {\r\n                var scene = this.get_scene_data();\r\n                // #ifdef MP-WEIXIN\r\n                return (scene == 1154) ? 1 : 0;\r\n                // #endif\r\n                return 0;\r\n            },\r\n            \r\n            /**\r\n             * 场景值获取\r\n             */\r\n            get_scene_data() {\r\n                return uni.getStorageSync(this.data.cache_scene_key) || 0;\r\n            },\r\n            \r\n            /**\r\n             * 场景值设置\r\n             */\r\n            set_scene_data(params) {\r\n                var scene = ((params.scene || null) == null) ? 0 : parseInt(params.scene);\r\n                uni.setStorageSync(this.data.cache_scene_key, scene);\r\n                return scene;\r\n            },\r\n\r\n            /**\r\n             * 获取设备信息\r\n             * key      指定key\r\n             * dv       默认数据（不存在则读取、默认null）\r\n             * is_real  是否实时读取\r\n             */\r\n            get_system_info(key, dv, is_real) {\r\n                var info = null;\r\n                if((is_real || false) == true) {\r\n                    info = this.set_system_info() || null;\r\n                } else {\r\n                    info = uni.getStorageSync(this.data.cache_system_info_key) || null;\r\n                }\r\n                if(info == null || (key|| null) == null) {\r\n                    return info;\r\n                }\r\n                return (info[key] == undefined) ? (dv == undefined ? null : dv) : info[key];\r\n            },\r\n\r\n            /**\r\n             * 设置设备信息\r\n             */\r\n            set_system_info() {\r\n                var system_info = uni.getSystemInfoSync();\r\n                uni.setStorageSync(this.data.cache_system_info_key, system_info);\r\n                return system_info;\r\n            },\r\n\r\n            /**\r\n             * 请求地址生成\r\n             * a              方法\r\n             * c              控制器\r\n             * plugins        插件标记（传参则表示为插件请求）\r\n             * params         url请求参数\r\n             * group          组名称（默认 api）\r\n             */\r\n            get_request_url(a, c, plugins, params, group) {\r\n                a = a || \"index\";\r\n                c = c || \"index\";\r\n                \r\n                // 是否插件请求、走api统一插件调用控制器\r\n                var plugins_params = \"\";\r\n                if ((plugins || null) != null) {\r\n                    plugins_params = \"&pluginsname=\" + plugins + \"&pluginscontrol=\" + c + \"&pluginsaction=\" + a;\r\n                    c = \"plugins\";\r\n                    a = \"index\";\r\n                }\r\n\r\n                // 参数处理\r\n                params = params || \"\";\r\n                if (params != \"\" && params.substr(0, 1) != \"&\") {\r\n                    params = \"&\" + params;\r\n                }\r\n\r\n                // 参数处理\r\n                var url = this.data.request_url + (group || \"api\")+\".php?s=\" + c + \"/\" + a + plugins_params;\r\n                return this.request_params_handle(url) + \"&ajax=ajax\" + params;\r\n            },\r\n            \r\n            /**\r\n             * 请求参数处理\r\n             * url     url地址\r\n             */\r\n            request_params_handle(url) {\r\n                // 用户信息\r\n                var user = this.get_user_cache_info();\r\n                var token = user == false ? '' : user.token || '';\r\n                var uuid = this.request_uuid();\r\n                var client_value = this.application_client_type();\r\n                // 拼接标识\r\n                var join = (url.indexOf('?') == -1) ? '?' : '&';\r\n                return url + join + \"system_type=\"+ this.data.system_type +\"&application=app&application_client_type=\"+ client_value + \"&token=\" + token + \"&uuid=\" + uuid;\r\n            },\r\n\r\n            /**\r\n             * 获取用户信息,信息不存在则唤醒授权\r\n             * object     回调操作对象\r\n             * method     回调操作对象的函数\r\n             * return     有用户数据直接返回, 则回调调用者\r\n             */\r\n            get_user_info(object, method) {\r\n                var user = this.get_user_cache_info();\r\n                if (user == false) {\r\n                    // #ifdef MP\r\n                    // 小程序唤醒用户授权\r\n                    this.user_login(object, method);\r\n                    // #endif\r\n                    \r\n                    // #ifdef H5 || APP\r\n                    // h5、app登陆注册\r\n                    uni.showModal({\r\n                        title: '温馨提示',\r\n                        content: '请先登陆或注册',\r\n                        confirmText: '确认',\r\n                        cancelText: '暂不',\r\n                        success: result => {\r\n                            if (result.confirm) {\r\n                                uni.navigateTo({\r\n                                    url: \"/pages/login/login\"\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                    // #endif\r\n\r\n                    return false;\r\n                }\r\n                return user;\r\n            },\r\n\r\n            /**\r\n             * 从缓存获取用户信息、可指定key和默认值\r\n             * key              数据key\r\n             * default_value    默认值\r\n             */\r\n            get_user_cache_info(key, default_value) {\r\n                var user = uni.getStorageSync(this.data.cache_user_info_key) || null;\r\n                if (user == null) {\r\n                    // 是否存在默认值\r\n                    return default_value == undefined ? false : default_value;\r\n                }\r\n\r\n                // 是否读取key\r\n                if ((key || null) != null) {\r\n                    return user[key] == undefined ? default_value == undefined ? null : default_value : user[key];\r\n                }\r\n\r\n                return user;\r\n            },\r\n\r\n            /**\r\n             * 系统参数获取\r\n             */\r\n            get_launch_cache_info() {\r\n                return uni.getStorageSync(this.data.cache_launch_info_key) || null;\r\n            },\r\n            \r\n            /**\r\n             * 系统参数设置\r\n             */\r\n            set_launch_cache_info(params) {\r\n                params = this.launch_params_handle(params);\r\n                uni.setStorageSync(this.data.cache_launch_info_key, params);\r\n                return params;\r\n            },\r\n\r\n            /**\r\n             * 获取登陆授权数据\r\n             */\r\n            get_login_cache_info() {\r\n                return uni.getStorageSync(this.data.cache_user_login_key) || null;\r\n            },\r\n\r\n            /**\r\n             * 用户登录\r\n             * object     回调操作对象\r\n             * method     回调操作对象的函数\r\n             * auth_data  授权数据\r\n             */\r\n            user_auth_login(object, method, auth_data) {\r\n                var self = this;\r\n                // #ifdef MP-WEIXIN || MP-QQ || MP-BAIDU || MP-TOUTIAO || MP-KUAISHOU\r\n                uni.checkSession({\r\n                    success: function() {\r\n                        var login_data = self.get_login_cache_info();\r\n                        if (login_data == null) {\r\n                            self.user_login(object, method);\r\n                        } else {\r\n                            self.get_user_login_info(object, method, login_data, auth_data);\r\n                        }\r\n                    },\r\n                    fail: function() {\r\n                        uni.removeStorageSync(self.data.cache_user_login_key);\r\n                        self.user_login(object, method);\r\n                    }\r\n                });\r\n                // #endif\r\n                // #ifdef MP-ALIPAY\r\n                var login_data = self.get_login_cache_info();\r\n                if (login_data == null) {\r\n                    self.user_login(object, method);\r\n                } else {\r\n                    self.get_user_login_info(object, method, login_data, auth_data);\r\n                }\r\n                // #endif\r\n            },\r\n\r\n            /**\r\n             * 用户登录\r\n             * object     回调操作对象\r\n             * method     回调操作对象的函数\r\n             * auth_data  授权数据\r\n             */\r\n            user_login(object, method) {\r\n                var login_data = uni.getStorageSync(this.data.cache_user_login_key) || null;\r\n                if (login_data == null) {\r\n                    this.user_login_handle(object, method, true);\r\n                } else {\r\n                    this.login_to_auth();\r\n                }\r\n            },\r\n\r\n            /**\r\n             * 用户登录处理\r\n             * object     回调操作对象\r\n             * method     回调操作对象的函数\r\n             * auth_data  授权数据\r\n             * is_to_auth 是否进入授权\r\n             */\r\n            user_login_handle(object, method, is_to_auth = true) {\r\n                var self = this;\r\n                uni.showLoading({\r\n                    title: \"授权中...\"\r\n                });\r\n                var action = 'login';\r\n                // #ifdef MP-BAIDU\r\n                action = 'getLoginCode';\r\n                // #endif\r\n                uni[action]({\r\n                    success: res => {\r\n                        if (res.code) {\r\n                            uni.request({\r\n                                url: self.get_request_url('appminiuserauth', 'user'),\r\n                                method: 'POST',\r\n                                data: {\r\n                                    authcode: res.code\r\n                                },\r\n                                dataType: 'json',\r\n                                success: res => {\r\n                                    uni.hideLoading();\r\n                                    if (res.data.code == 0) {\r\n                                        var data = res.data.data;\n                                        var client_type = this.application_client_type();\r\n                                        if ((data.is_user_exist || 0) == 1 || client_type == 'weixin') {\r\n                                            uni.setStorage({\r\n                                                key: self.data.cache_user_info_key,\r\n                                                data: data,\r\n                                                success: res => {\r\n                                                    if (typeof object === 'object' && (method || null) != null) {\r\n                                                        object[method]();\r\n                                                    }\r\n                                                },\r\n                                                fail: () => {\r\n                                                    self.showToast('用户信息缓存失败');\r\n                                                }\r\n                                            });\r\n                                        } else {\r\n                                            uni.setStorage({\r\n                                                key: self.data.cache_user_login_key,\r\n                                                data: data\r\n                                            });\r\n                                            if(is_to_auth) {\r\n                                                self.login_to_auth();\r\n                                            }\r\n                                        }\r\n                                    } else {\r\n                                        uni.hideLoading();\r\n                                        self.showToast(res.data.msg);\r\n                                    }\r\n                                },\r\n                                fail: () => {\r\n                                    uni.hideLoading();\r\n                                    self.showToast('服务器请求出错');\r\n                                }\r\n                            });\r\n                        }\r\n                    },\r\n                    fail: e => {\r\n                        uni.hideLoading();\r\n                        self.showToast('授权失败');\r\n                    }\r\n                });\r\n            },\r\n\r\n            /**\r\n             * 跳转到登录页面授权\r\n             */\r\n            login_to_auth() {\r\n                uni.showModal({\r\n                    title: '温馨提示',\r\n                    content: '授权用户信息',\r\n                    confirmText: '确认',\r\n                    cancelText: '暂不',\r\n                    success: result => {\r\n                        if (result.confirm) {\r\n                            uni.navigateTo({\r\n                                url: \"/pages/login/login\"\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n            },\r\n\r\n            /**\r\n             * 获取用户授权信息\r\n             * object     回调操作对象\r\n             * method     回调操作对象的函数\r\n             * login_data 登录信息\r\n             * auth_data  授权数据\r\n             */\r\n            get_user_login_info(object, method, login_data, auth_data) {\r\n                // 邀请人参数\r\n                var params = this.get_launch_cache_info();\r\n                var referrer = params == null ? 0 : params.referrer || 0;\r\n\r\n                // 请求数据\r\n                var data = {\r\n                    \"auth_data\": JSON.stringify(auth_data),\r\n                    \"openid\": login_data.openid,\r\n                    \"unionid\": login_data.unionid,\r\n                    \"referrer\": referrer\r\n                };\r\n                \r\n                // 用户信息处理\r\n                uni.showLoading({\r\n                    title: \"授权中...\"\r\n                });\r\n                var self = this;\r\n                uni.request({\r\n                    url: self.get_request_url('appminiuserinfo', 'user'),\r\n                    method: 'POST',\r\n                    data: data,\r\n                    dataType: 'json',\r\n                    success: res => {\r\n                        uni.hideLoading();\r\n                        if (res.data.code == 0) {\r\n                            uni.setStorage({\r\n                                key: self.data.cache_user_info_key,\r\n                                data: res.data.data,\r\n                                success: res => {\r\n                                    if (typeof object === 'object' && (method || null) != null) {\r\n                                        object[method]();\r\n                                    }\r\n                                },\r\n                                fail: () => {\r\n                                    self.showToast('用户信息缓存失败');\r\n                                }\r\n                            });\r\n                        } else {\r\n                            self.showToast(res.data.msg);\r\n                        }\r\n                    },\r\n                    fail: () => {\r\n                        uni.hideLoading();\r\n                        self.showToast('服务器请求出错');\r\n                    }\r\n                });\r\n            },\r\n\r\n            /**\r\n             * 字段数据校验\r\n             * data           待校验的数据, 一维json对象\r\n             * validation     待校验的字段, 格式 [{fields: 'mobile', msg: '请填写手机号码', is_can_zero: 1(是否可以为0)}, ...]\r\n             */\r\n            fields_check(data, validation) {\r\n                for (var i in validation) {\r\n                    var temp_value = data[validation[i][\"fields\"]];\r\n                    var temp_is_can_zero = validation[i][\"is_can_zero\"] || null;\r\n                    if (temp_value == undefined || temp_value.length == 0 || temp_value == -1 || temp_is_can_zero ==\r\n                        null && temp_value == 0) {\r\n                        this.showToast(validation[i]['msg']);\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            },\r\n\r\n            /**\r\n             * 获取当前时间戳\r\n             */\r\n            get_timestamp() {\r\n                return parseInt(new Date().getTime() / 1000);\r\n            },\r\n\r\n            /**\r\n             * 获取日期\r\n             * format       日期格式（默认 yyyy-MM-dd h:m:s）\r\n             * timestamp    时间戳（默认当前时间戳）\r\n             */\r\n            get_date(format, timestamp) {\r\n                var d = new Date((timestamp || this.get_timestamp()) * 1000);\r\n                var date = {\r\n                    \"M+\": d.getMonth() + 1,\r\n                    \"d+\": d.getDate(),\r\n                    \"h+\": d.getHours(),\r\n                    \"m+\": d.getMinutes(),\r\n                    \"s+\": d.getSeconds(),\r\n                    \"q+\": Math.floor((d.getMonth() + 3) / 3),\r\n                    \"S+\": d.getMilliseconds()\r\n                };\r\n                if (/(y+)/i.test(format)) {\r\n                    format = format.replace(RegExp.$1, (d.getFullYear() + '').substr(4 - RegExp.$1.length));\r\n                }\r\n                for (var k in date) {\r\n                    if (new RegExp(\"(\" + k + \")\").test(format)) {\r\n                        format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? date[k] : (\"00\" + date[k]).substr((\"\" + date[k]).length));\r\n                    }\r\n                }\r\n\r\n                return format;\r\n            },\r\n\r\n            /**\r\n             * 获取对象、数组的长度、元素个数\r\n             * obj      要计算长度的元素（object、array、string）\r\n             */\r\n            get_length(obj) {\r\n                var obj_type = typeof obj;\r\n                if (obj_type == \"string\") {\r\n                    return obj.length;\r\n                } else if (obj_type == \"object\") {\r\n                    var obj_len = 0;\r\n                    for (var i in obj) {\r\n                        obj_len++;\r\n                    }\r\n                    return obj_len;\r\n                }\r\n                return false;\r\n            },\r\n\r\n            /**\r\n             * 价格保留两位小数\r\n             * price      价格保留两位小数\r\n             */\r\n            price_two_decimal(x) {\r\n                var f_x = parseFloat(x);\r\n                if (isNaN(f_x)) {\r\n                    return 0;\r\n                }\r\n                var f_x = Math.round(x * 100) / 100;\r\n                var s_x = f_x.toString();\r\n                var pos_decimal = s_x.indexOf('.');\r\n                if (pos_decimal < 0) {\r\n                    pos_decimal = s_x.length;\r\n                    s_x += '.';\r\n                }\r\n                while (s_x.length <= pos_decimal + 2) {\r\n                    s_x += '0';\r\n                }\r\n                return s_x;\r\n            },\r\n\r\n            // url主要部分\r\n            get_url_main_part(url) {\r\n                if (url.indexOf(\"?\") == -1) {\r\n                    var value = url;\r\n                } else {\r\n                    var temp_str = url.split(\"?\");\r\n                    var value = temp_str[0];\r\n                }\r\n                return value;\r\n            },\r\n\r\n            /**\r\n             * 当前地址是否存在tabbar中\r\n             */\r\n            is_tabbar_pages(url) {\r\n                var value = this.get_url_main_part(url);\r\n                if ((value || null) == null) {\r\n                    return false;\r\n                }\r\n                var temp_tabbar_pages = this.data.tabbar_pages;\r\n                for (var i in temp_tabbar_pages) {\r\n                    if (temp_tabbar_pages[i] == value) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n\r\n            /**\r\n             * 事件操作\r\n             */\r\n            operation_event(e) {\r\n                var value = e.currentTarget.dataset.value || null;\r\n                var type = parseInt(e.currentTarget.dataset.type);\r\n                if (value != null) {\r\n                    switch (type) {\r\n                        // web\r\n                        case 0:\r\n                            this.open_web_view(value);\r\n                            break;\r\n                        // 内部页面\r\n                        case 1:\r\n                            if (this.is_tabbar_pages(value)) {\r\n                                uni.switchTab({\r\n                                    url: value\r\n                                });\r\n                            } else {\r\n                                uni.navigateTo({\r\n                                    url: value\r\n                                });\r\n                            }\r\n                            break;\r\n                        // 跳转到外部小程序\r\n                        case 2:\r\n                            uni.navigateToMiniProgram({\r\n                                appId: value\r\n                            });\r\n                            break;\r\n                        // 跳转到地图查看位置\r\n                        case 3:\r\n                            var values = value.split('|');\r\n                            if (values.length != 4) {\r\n                                this.showToast('事件值格式有误');\r\n                                return false;\r\n                            }\r\n                            this.open_location(values[2], values[3], values[0], values[1]);\r\n                            break;\r\n                        // 拨打电话\r\n                        case 4:\r\n                            this.call_tel(value);\r\n                            break;\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * 打开 webview页面\r\n             * value    [string]  url地址\r\n             */\r\n            open_web_view(value) {\r\n                uni.navigateTo({\r\n                    url: \"/pages/web-view/web-view?url=\" + encodeURIComponent(value)\r\n                });\r\n            },\r\n\r\n            /**\r\n             * 默认弱提示方法\r\n             * msg    [string]  提示信息\r\n             * status [string]  状态 默认error [正确success, 错误error]\r\n             */\r\n            showToast(msg, status) {\r\n                if ((status || 'error') == 'success') {\r\n                    uni.showToast({\r\n                        icon: 'success',\r\n                        title: msg,\r\n                        duration: 3000\r\n                    });\r\n                } else {\r\n                    uni.showToast({\r\n                        icon: 'none',\r\n                        title: msg,\r\n                        duration: 3000\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * alert确认框\r\n             * title              [string]    标题（默认空）\r\n             * msg                [string]    提示信息，必传\r\n             * is_show_cancel     [int]       是否显示取消按钮（默认显示 0否, 1|undefined是）\r\n             * cancel_text        [string]    取消按钮文字（默认 取消）\r\n             * cancel_color       [string]    取消按钮的文字颜色，必须是 16 进制格式的颜色字符串（默认 #000000）\r\n             * confirm_text       [string]    确认按钮文字（默认 确认）\r\n             * confirm_color      [string]    确认按钮的文字颜色，必须是 16 进制格式的颜色字符串（默认 #000000）\r\n             * object             [boject]    回调操作对象，点击确认回调参数1，取消回调0\r\n             * method             [string]    回调操作对象的函数\r\n             */\r\n            alert(e) {\r\n                var msg = e.msg || null;\r\n                if (msg != null) {\r\n                    var title = e.title || '';\r\n                    var is_show_cancel = e.is_show_cancel == 0 ? false : true;\r\n                    var cancel_text = e.cancel_text || '取消';\r\n                    var confirm_text = e.confirm_text || '确认';\r\n                    var cancel_color = e.cancel_color || '#000000';\r\n                    var confirm_color = e.confirm_color || '#576B95';\r\n                    uni.showModal({\r\n                        title: title,\r\n                        content: msg,\r\n                        showCancel: is_show_cancel,\r\n                        cancelText: cancel_text,\r\n                        cancelColor: cancel_color,\r\n                        confirmText: confirm_text,\r\n                        confirmColor: confirm_color,\r\n                        success(res) {\r\n                            if ((e.object || null) != null && typeof e.object === 'object' && (e.method || null) != null) {\r\n                                e.object[e.method](res.confirm ? 1 : 0);\r\n                            }\r\n                        }\r\n                    });\r\n                } else {\r\n                    self.showToast('提示信息为空 alert');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * 是否需要登录\r\n             * 是否需要绑定手机号码\r\n             */\r\n            user_is_need_login(user) {\r\n                // 用户信息是否正确\r\n                if (user == false) {\r\n                    return true;\r\n                }\r\n                // 是否需要绑定手机号码\r\n                if ((user.is_mandatory_bind_mobile || 0) == 1) {\r\n                    if ((user.mobile || null) == null) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n\r\n            // url参数转json对象\r\n            url_params_to_json(url_params) {\r\n                var json = new Object();\r\n                if ((url_params || null) != null) {\r\n                    var arr = url_params.split('&');\r\n                    for (var i = 0; i < arr.length; i++) {\r\n                        var temp = arr[i].split('=');\r\n                        json[temp[0]] = temp[1];\r\n                    }\r\n                }\r\n                return json;\r\n            },\r\n\r\n            // json对象转url请求参数\r\n            json_to_url_params(data) {\r\n                var str = '';\r\n                for(var i in data) {\r\n                    if(str != '') {\r\n                        str += '&';\r\n                    }\r\n                    str += i+'='+data[i];\r\n                }\r\n                return str;\r\n            },\r\n\r\n            // 拨打电话\r\n            call_tel(value) {\r\n                if ((value || null) != null) {\r\n                    uni.makePhoneCall({\r\n                        phoneNumber: value.toString()\r\n                    });\r\n                }\r\n            },\r\n\r\n            /**\r\n             * 登录校验\r\n             * object     回调操作对象\r\n             * method     回调操作对象的函数\r\n             */\r\n            is_login_check(res, object, method) {\r\n                if (res.code == -400) {\r\n                    uni.clearStorage();\r\n                    this.get_user_info(object, method);\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n\r\n            /**\r\n             * 设置导航reddot\r\n             * index     tabBar 的哪一项，从左边算起（0开始）\r\n             * type      0 移出, 1 添加 （默认 0 移出）\r\n             */\r\n            set_tab_bar_reddot(index, type) {\r\n                if (index !== undefined && index !== null) {\r\n                    if ((type || 0) == 0) {\r\n                        uni.hideTabBarRedDot({\r\n                            index: Number(index)\r\n                        });\r\n                    } else {\r\n                        uni.showTabBarRedDot({\r\n                            index: Number(index)\r\n                        });\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * 设置导航车badge\r\n             * index     tabBar 的哪一项，从左边算起（0开始）\r\n             * type      0 移出, 1 添加 （默认 0 移出）\r\n             * value     显示的文本，超过 4 个字符则显示成 ...（type参数为1的情况下有效）\r\n             */\r\n            set_tab_bar_badge(index, type, value) {\r\n                if (index !== undefined && index !== null) {\r\n                    if ((type || 0) == 0) {\r\n                        uni.removeTabBarBadge({\r\n                            index: Number(index)\r\n                        });\r\n                    } else {\r\n                        uni.setTabBarBadge({\r\n                            index: Number(index),\r\n                            \"text\": value.toString()\r\n                        });\r\n                    }\r\n                }\r\n            },\r\n\r\n            // 页面分享处理\r\n            page_share_handle(share = null) {\r\n                // 当前页面\r\n                var pages = getCurrentPages();\r\n                var obj = pages[pages.length-1];\r\n\r\n                // 分享信息、是否指定参数\r\n                if((share || null) == null) {\r\n                    share = {}\r\n                }\r\n                // 从页面对象获取参数\r\n                if(Object.keys(share).length <= 0) {\r\n                    share = obj.share_info || {};\r\n                }\r\n                // 参数处理\r\n                share = this.share_content_handle(share);\r\n\r\n                // #ifdef MP-WEIXIN\r\n                // 微信小程序展示系统分享好友和朋友圈按钮\r\n                // 其他端小程序不用展示会调起分享窗口\r\n                var not_pages = ['/pages/user/user', '/pages/cart/cart'];\r\n                if(not_pages.indexOf(share.url) == -1) {\r\n                    uni.showShareMenu({\r\n                        withShareTicket: true,\r\n                        title: share.title,\r\n                        desc: share.desc,\r\n                        path: share.path + share.query,\r\n                        imageUrl: share.img,\r\n                        menus: ['shareAppMessage', 'shareTimeline']\r\n                    });\r\n                } else {\r\n                    wx.hideShareMenu({\r\n                      menus: ['shareTimeline']\r\n                    });\r\n                }\r\n                // #endif\r\n                // #ifdef H5\r\n                // H5处理微信环境分享自定义信息\r\n                if(this.is_weixin_env()) {\r\n                    var page_url = this.get_page_url();\r\n                    uni.request({\r\n                        url: this.get_request_url(\"signpackage\", \"index\", \"share\"),\r\n                        method: \"POST\",\r\n                        data: {\r\n                            url: encodeURIComponent(page_url)\r\n                        },\r\n                        dataType: \"json\",\r\n                        success: res => {\r\n                            if (res.data.code == 0 && (res.data.data.package || null) != null) {\r\n                                var data = res.data.data.package;\r\n                                var wx = require('jweixin-module');                                \r\n                                wx.config({\r\n                                    debug: false,\r\n                                    appId: data.appId,\r\n                                    timestamp: data.timestamp,\r\n                                    nonceStr: data.nonceStr,\r\n                                    signature: data.signature,\r\n                                    jsApiList: [\r\n                                        'updateAppMessageShareData',\r\n                                        'updateTimelineShareData',\r\n                                        'onMenuShareWeibo'\r\n                                    ]\r\n                                });\r\n                                wx.ready(function () {\r\n                                    // 自定义“分享给朋友”及“分享到QQ”按钮的分享内容\r\n                                    wx.updateAppMessageShareData({\r\n                                        title: share.title,\r\n                                        desc: share.desc,\r\n                                        link: share.url,\r\n                                        imgUrl: share.img\r\n                                    });\r\n                                    // 自定义“分享到朋友圈”及“分享到QQ空间”按钮的分享内容\r\n                                    wx.updateTimelineShareData({ \r\n                                        title: share.title,\r\n                                        link: share.url,\r\n                                        imgUrl: share.img\r\n                                    });\r\n                                    // 获取“分享到腾讯微博”按钮点击状态及自定义分享内容接口\r\n                                    wx.onMenuShareWeibo({\r\n                                        title: share.title,\r\n                                        desc: share.desc,\r\n                                        link: share.url,\r\n                                        imgUrl: share.img\r\n                                    });\r\n                                });\r\n                            }\r\n                        },\r\n                        fail: () => {\r\n                            this.showToast(\"服务器请求出错\");\r\n                        }\r\n                    });\r\n                }\r\n                // #endif\r\n                \r\n                // #ifdef MP-BAIDU\r\n                // 百度小程序wab化搜索引擎数据设置\r\n                uni.setPageInfo({\r\n                  title: share.title,\r\n                  keywords: share.kds || share.desc,\r\n                  articleTitle: share.title,\r\n                  description: share.desc,\r\n                  image: share.img,\r\n                  video: ((share.video || null) == null) ? [] : [{\r\n                            url: share.video,\r\n                            duration: '100',\r\n                            image: share.img\r\n                        }]\r\n                });\r\n                // #endif\r\n            },\r\n\r\n            /**\r\n             * 获取配置信息、可指定key和默认值\r\n             * key              数据key（支持多级读取、以 . 分割key名称）\r\n             * default_value    默认值\r\n             */\r\n            get_config(key, default_value) {\r\n                var value = null;\r\n                var config = uni.getStorageSync(this.data.cache_config_info_key) || null;\r\n                if (config != null) {\r\n                    // 数据读取\r\n                    var arr = key.split('.');\r\n                    if (arr.length == 1) {\r\n                        value = config[key] == undefined ? null : config[key];\r\n                    } else {\r\n                        value = config;\r\n                        for (var i in arr) {\r\n                            if (value[arr[i]] != undefined) {\r\n                                value = value[arr[i]];\r\n                            } else {\r\n                                value = null;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // 默认值\r\n                if(value == null && default_value != undefined) {\r\n                    value = default_value;\r\n                }\r\n                // 无数据则处理自定义字段定义的数据\r\n                if(value == null) {\r\n                    switch(key) {\r\n                        // 货币符号\r\n                        case 'currency_symbol' :\r\n                            value = this.data.currency_symbol;\r\n                            break;\r\n                    }\r\n                }\r\n                return value;\r\n            },\r\n\r\n            // 初始化 配置信息\r\n            init_config() {\r\n                uni.request({\r\n                    url: this.get_request_url('common', 'base'),\r\n                    method: 'POST',\r\n                    data: {is_key: 1},\r\n                    dataType: 'json',\r\n                    success: res => {\r\n                        if (res.data.code == 0) {\r\n                            uni.setStorage({\r\n                                key: this.data.cache_config_info_key,\r\n                                data: res.data.data,\r\n                                fail: () => {\r\n                                    this.showToast('配置信息缓存失败');\r\n                                }\r\n                            });\r\n                            \r\n                            // 用户自动登录处理\r\n                            this.user_auto_login_handle();\r\n                        } else {\r\n                            this.showToast(res.data.msg);\r\n                        }\r\n                    },\r\n                    fail: () => {\r\n                        this.showToast('服务器请求出错');\r\n                    }\r\n                });\r\n            },\r\n\r\n            /**\r\n             * 配置是否有效(100毫秒检验一次、最多检验100次)\r\n             * object     回调操作对象\r\n             * method     回调操作对象的函数\r\n             */\r\n            is_config(object, method) {\r\n                var self = this;\r\n                var count = 0;\r\n                var timer = setInterval(function() {\r\n                    if (self.get_config('status') == 1) {\r\n                        clearInterval(timer);\r\n\r\n                        if (typeof object === 'object' && (method || null) != null) {\r\n                            object[method](true);\r\n                        }\r\n                    }\r\n                    count++;\r\n\r\n                    if (count >= 100) {\r\n                        clearInterval(timer);\r\n                    }\r\n                }, 100);\r\n            },\r\n\r\n            /**\r\n             * 火星坐标GCJ02到百度坐标BD-09(高德，谷歌，腾讯坐标 -> 百度)\r\n             * lng     经度\r\n             * lat     纬度\r\n             */\r\n            map_gcj_to_bd(lng, lat) {\r\n                lng = parseFloat(lng);\r\n                lat = parseFloat(lat);\r\n                let x_pi = 3.14159265358979324 * 3000.0 / 180.0;\r\n                let x = lng;\r\n                let y = lat;\r\n                let z = Math.sqrt(x * x + y * y) + 0.00002 * Math.sin(y * x_pi);\r\n                let theta = Math.atan2(y, x) + 0.000003 * Math.cos(x * x_pi);\r\n                let lngs = z * Math.cos(theta) + 0.0065;\r\n                let lats = z * Math.sin(theta) + 0.006;\r\n                return {\r\n                    lng: lngs,\r\n                    lat: lats\r\n                };\r\n            },\r\n\r\n            /**\r\n             * 百度坐标BD-09到火星坐标GCJ02(百度 -> 高德，谷歌，腾讯坐标)\r\n             * lng     经度\r\n             * lat     纬度\r\n             */\r\n            map_bd_to_gcj(lng, lat) {\r\n                lng = parseFloat(lng);\r\n                lat = parseFloat(lat);\r\n                let x_pi = 3.14159265358979324 * 3000.0 / 180.0;\r\n                let x = lng - 0.0065;\r\n                let y = lat - 0.006;\r\n                let z = Math.sqrt(x * x + y * y) + 0.00002 * Math.sin(y * x_pi);\r\n                let theta = Math.atan2(y, x) + 0.000003 * Math.cos(x * x_pi);\r\n                let lngs = z * Math.cos(theta);\r\n                let lats = z * Math.sin(theta);\r\n                return {\r\n                    lng: lngs,\r\n                    lat: lats\r\n                };\r\n            },\r\n\r\n            /**\r\n             * 打开地图\r\n             * lng        经度\r\n             * lat        纬度\r\n             * name       地图上面显示的名称\r\n             * address    地图上面显示的详细地址\r\n             * scale      缩放比例，范围5~18\r\n             */\r\n            open_location(lng, lat, name, address, scale) {\r\n                // #ifdef MP-KUAISHOU\r\n                this.showToast('请复制地址到网页地图中查看！');\r\n                return false;\r\n                // #endif\r\n\r\n                if (lng == undefined || lat == undefined || lng == '' || lat == '') {\r\n                    this.showToast('坐标有误');\r\n                    return false;\r\n                }\r\n\r\n                // 转换坐标打开位置\r\n                uni.openLocation({\r\n                    name: name || '地理位置',\r\n                    address: address || '',\r\n                    scale: scale || 18,\r\n                    longitude: parseFloat(lng),\r\n                    latitude: parseFloat(lat)\r\n                });\r\n            },\r\n\r\n            // uuid生成\r\n            uuid() {\r\n                var d = new Date().getTime();\r\n                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n                    var r = (d + Math.random() * 16) % 16 | 0;\r\n                    d = Math.floor(d / 16);\r\n                    return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\r\n                });\r\n            },\r\n\r\n            // 获取当前uuid\r\n            request_uuid() {\r\n                var uuid = uni.getStorageSync(this.data.cache_user_uuid_key) || null;\r\n                if (uuid == null) {\r\n                    uuid = this.uuid();\r\n                    uni.setStorage({\r\n                        key: this.data.cache_user_uuid_key,\r\n                        data: uuid,\r\n                        fail: () => {\r\n                            this.showToast('uuid缓存失败');\r\n                        }\r\n                    });\r\n                }\r\n                return uuid;\r\n            },\r\n\r\n            // 链接地址事件\r\n            url_event(e) {\r\n                var value = e.currentTarget.dataset.value || null;\n                var is_redirect = parseInt(e.currentTarget.dataset.redirect || 0) == 1;\r\n                this.url_open(value, is_redirect);\r\n            },\r\n\r\n            // url打开\r\n            url_open(value, is_redirect = false) {\r\n                if (value != null) {\r\n                    var temp = value.substr(0, 6);\r\n                    if (temp == 'http:/' || temp == 'https:') {\r\n                        this.open_web_view(value);\r\n                    } else {\r\n                        if (this.is_tabbar_pages(value)) {\r\n                            uni.switchTab({\r\n                                url: value\r\n                            });\r\n                        } else {\r\n                            if(is_redirect) {\r\n                                uni.redirectTo({\r\n                                    url: value\r\n                                });\r\n                            } else {\r\n                                uni.navigateTo({\r\n                                    url: value\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n\r\n            // 剪贴板\r\n            text_copy_event(data) {\r\n                var value = (typeof(data) == 'object') ? (data.currentTarget.dataset.value || null) : (data || null);\r\n                if (value != null) {\r\n                    var self = this;\r\n                    uni.setClipboardData({\r\n                        data: value,\r\n                        success(res) {\r\n                            uni.getClipboardData({\r\n                                success(res) {\r\n                                    self.showToast('复制成功', 'success');\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.showToast('复制内容为空');\r\n                }\r\n            },\r\n\r\n            // 图片预览\r\n            image_show_event(e) {\r\n                var value = e.currentTarget.dataset.value || null;\r\n                if (value != null) {\r\n                    uni.previewImage({\r\n                        current: value,\r\n                        urls: [value]\r\n                    });\r\n                } else {\r\n                    this.showToast('图片地址为空');\r\n                }\r\n            },\r\n\r\n            // 静态文件url地址\r\n            get_static_url(type, is_plugins) {\r\n                // 默认公共地址\r\n                if((type || null) == null) {\r\n                    type = 'common';\r\n                }\r\n                \r\n                // 是否插件\r\n                if((is_plugins || false) == true) {\r\n                    // 根据配置的静态url地址+插件标识符\r\n                    return this.data.static_url+'static/plugins/images/'+type+'/';\r\n                } else {\r\n                    // 根据配置的静态url地址+主题标识+参数类型组合远程静态文件地址\r\n                    return this.data.static_url+'static/app/'+this.data.default_theme+'/'+type+'/';\r\n                }\r\n            },\r\n            \r\n            // rpx转px\r\n            rpx_to_px(value) {\r\n                return ((value || 0) == 0) ? 0 : parseInt(value) / 750 * parseInt(this.get_system_info('windowWidth', 0));\r\n            },\r\n            \r\n            // px转rpx\r\n            px_to_rpx(value) {\r\n                return ((value || 0) == 0) ? 0 : parseInt(value) * 750 / parseInt(this.get_system_info('windowWidth', 0));\r\n            },\r\n            \r\n            // 终端类型\r\n            application_client() {\r\n                var type = '';\r\n                // #ifdef APP\r\n                    type = 'app';\r\n                //#endif\r\n                // #ifdef MP\r\n                    type = 'mp';\r\n                //#endif\r\n                return type;\r\n            },\r\n            \r\n            // 终端类型值\r\n            application_client_type() {\r\n                var value = '';\r\n                // #ifdef MP-WEIXIN\r\n                    value = 'weixin';\r\n                //#endif\r\n                // #ifdef MP-ALIPAY\r\n                    value = 'alipay';\r\n                //#endif\r\n                // #ifdef MP-BAIDU\r\n                    value = 'baidu';\r\n                //#endif\r\n                // #ifdef MP-QQ\r\n                    value = 'qq';\r\n                //#endif\r\n                // #ifdef MP-TOUTIAO\r\n                    value = 'toutiao';\r\n                //#endif\r\n                // #ifdef MP-KUAISHOU\r\n                    value = 'kuaishou';\r\n                //#endif\r\n                // #ifdef H5\r\n                    value = 'h5';\r\n                //#endif\r\n                return value;\r\n            },\r\n\r\n            // 授权验证\r\n            auth_check(object, method, scope, msg) {\r\n                var self = this;\r\n                uni.getSetting({\r\n                    success(res) {\r\n                        if (!res.authSetting[scope]) {\r\n                            uni.authorize({\r\n                                scope: scope,\r\n                                success (res) {\r\n                                    if (typeof object === 'object' && (method || null) != null) {\r\n                                        object[method](1);\r\n                                    }\r\n                                },\r\n                                fail (res) {\r\n                                    self.showToast(msg || '请打开授权');\r\n                                    setTimeout(function() {\r\n                                        uni.openSetting();\r\n                                    }, 1000);\r\n                                }\r\n                            });\r\n                        } else {\r\n                            if (typeof object === 'object' && (method || null) != null) {\r\n                                object[method](1);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            },\r\n\r\n            // 窗口宽度处理\r\n            window_width_handle(width) {\r\n                // #ifdef H5 || APP\r\n                if(width > 800) {\r\n                    width = 800;\r\n                }\r\n                // #endif\r\n                return width;\r\n            },\r\n\r\n            // 窗口高度处理\r\n            window_height_handle(system) {\r\n                var height = system.windowHeight;\r\n                // 状态栏\r\n                if(system.statusBarHeight > 0) {\r\n                    height += system.statusBarHeight;\r\n                }\r\n                // 导航栏\r\n                if(system.windowTop > 0) {\r\n                    height += system.windowTop;\r\n                }\r\n                // 底部菜单\r\n                if(system.windowBottom > 0) {\r\n                    height += system.windowBottom;\r\n                }\r\n                return height;\r\n            },\r\n\r\n            // 获取当前页面地址\r\n            // is_whole 完整地址（?后面的参数）\r\n            get_page_url(is_whole = true) {\r\n                // #ifdef MP || APP\r\n                var url = this.current_page();\r\n                // #endif\r\n                // #ifdef H5\r\n                var url = window.location.href;\r\n                // #endif\r\n                if(is_whole == false) {\r\n                    var temp = url.split('?');\r\n                    url = temp[0];\r\n                }\r\n                return url;\r\n            },\r\n\r\n            // 是否微信环境\r\n            is_weixin_env() {\r\n                var agent = navigator.userAgent.toLowerCase();\r\n                if(agent.match(/MicroMessenger/i) == 'micromessenger') {\r\n                    return true;\r\n                }\r\n                return false;\r\n            },\r\n\r\n            // 用户微信webopenid是否存在\r\n            is_user_weixin_web_openid(order_ids) {\r\n                // 微信环境判断是否已有web_openid、不存在则跳转到插件进行授权\r\n                if(this.is_weixin_env()) {\r\n                    var web_openid = this.get_user_cache_info('weixin_web_openid') || null;\r\n                    if(web_openid == null) {\r\n                        // 已经授权则重新刷新用户信息\r\n                        var params = this.get_launch_cache_info();\r\n                        if(params != null && (params.is_weixin_auth_web_openid || 0) == 1) {\r\n                            uni.showLoading({\r\n                                title: \"处理中...\"\r\n                            });\r\n                            uni.request({\r\n                                url: this.get_request_url(\"tokenuserinfo\", \"user\"),\r\n                                method: \"POST\",\r\n                                data: {},\r\n                                dataType: \"json\",\r\n                                success: res => {\r\n                                    uni.hideLoading();\r\n                                    if (res.data.code == 0) {\r\n                                        uni.setStorageSync(this.data.cache_user_info_key, res.data.data);\r\n                                    } else {\r\n                                        this.showToast(res.data.msg);\r\n                                    }\r\n                                },\r\n                                fail: () => {\r\n                                    uni.hideLoading();\r\n                                    this.showToast(\"服务器请求出错\");\r\n                                }\r\n                            });\r\n                            return true;\r\n                        } else {\r\n                            uni.setStorageSync(this.data.cache_page_pay_key, (typeof order_ids == 'array') ? order_ids.join(',') : order_ids);\r\n                            var page_url = this.get_page_url();\r\n                                page_url += (page_url.indexOf('?') == -1) ? '?' : '&';\r\n                                page_url += 'is_weixin_auth_web_openid=1';\r\n                            var request_url = encodeURIComponent(base64.encode(page_url));\r\n                            var url = this.get_request_url(\"index\", \"pay\", \"weixinwebauthorization\", \"request_url=\"+request_url, \"index\").replace('&ajax=ajax', '');\r\n                            window.location.href = url;\r\n                        }\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            },\r\n\r\n            // app标题\r\n            get_application_title() {\r\n                var value = null;\r\n                // 根据终端类型获取对应数据\r\n                var type = this.application_client_type() || null;\r\n                if(type !== null) {\r\n                    value = this.get_config('config.common_app_mini_'+type+'_title') || null;\r\n                }\r\n                // 获取公共数据\r\n                if(value === null) {\r\n                    value = this.get_config('config.home_site_name', this.data.application_title);\r\n                }\r\n                return value;\r\n            },\r\n\r\n            // app描述\r\n            get_application_describe() {\r\n                var value = null;\r\n                // 根据终端类型获取对应数据\r\n                var type = this.application_client_type() || null;\r\n                if(type !== null) {\r\n                    value = this.get_config('config.common_app_mini_'+type+'_describe') || null;\r\n                }\r\n                // 获取公共数据\r\n                if(value === null) {\r\n                    value = this.data.application_describe;\r\n                }\r\n                return value;\r\n            },\n\n            // applogo\n            get_application_logo() {\n                return this.get_config('config.home_site_logo_wap', this.data.application_logo);\n            },\r\n\r\n            // 分享内容处理\r\n            share_content_handle(data) {\r\n                // 获取插件配置信息\r\n                var share_config = this.get_config('plugins_base.share.data') || {};\r\n                var result = {\r\n                    title: data.title || share_config.title || this.get_application_title(),\r\n                    desc: data.desc || share_config.desc || this.get_application_describe(),\r\n                    path: data.path || this.data.tabbar_pages[0],\r\n                    query: this.share_query_handle(data.query || ''),\r\n                    img: data.img || share_config.pic || this.get_config('config.home_site_logo_square')\r\n                };\r\n                result['url'] = this.get_page_url();\r\n                // #ifdef H5\r\n                result['url'] = result.url.split('#')[0] + '#' + ((result.path.substr(0 ,1) == '/') ? '' : '/') + result.path + result.query;\r\n                // #endif\r\n                return result;\r\n            },\r\n\r\n            // 分享参数处理\r\n            share_query_handle(query) {\r\n                if((query || null) == null || query.indexOf('referrer') == -1) {\r\n                    var user_id = parseInt(this.get_user_cache_info('id', 0)) || 0;\r\n                    if(user_id > 0) {\r\n                        var join = ((query || null) == null) ? '' : '&';\r\n                        query += join+'referrer='+user_id;\r\n                    }\r\n                }\r\n                return ((query || null) == null) ? '' : '?'+query;\r\n            },\r\n\r\n            // 是否朋友圈单页访问提示\r\n            is_single_page_check() {\r\n                if(this.is_current_single_page() == 1) {\r\n                    this.showToast('请前往小程序使用完整服务');\r\n                    return false;\r\n                }\r\n                return true;\r\n            },\r\n\r\n            // 当前页面地址\r\n            current_page() {\r\n                // 来源地址、拼接当前小程序页面\r\n                var pages = getCurrentPages();\r\n                var page = pages[pages.length-1];\r\n                return this.page_url_handle(page);\r\n            },\r\n\r\n            // 上一页页面地址\r\n            prev_page() {\r\n                var value = null;\r\n                var pages = getCurrentPages();\r\n                var length = pages.length;\r\n                if(length > 1) {\r\n                    value = this.page_url_handle(pages[length-2]);\r\n                }\r\n                return value;\r\n            },\n\n            // 返回上一页、则回到shouy \n            page_back_prev_event() {\n                var prev_page = this.prev_page();\n                if(prev_page == null) {\n                    uni.switchTab({url: this.data.tabbar_pages[0]});\n                } else {\n                    uni.navigateBack();\n                }\n            },\r\n\r\n            // 页面地址处理\r\n            page_url_handle(page) {\r\n                var route = page.route;\r\n                var options = page.options || {};\r\n                var query = '';\r\n                if(JSON.stringify(options) != '{}') {\r\n                    for(var i in options) {\r\n                        query += '&'+i+'='+options[i];\r\n                    }\r\n                }\r\n                if((query || null) != null) {\r\n                    route += '?'+query.substr(1);\r\n                }\r\n                return route;\r\n            },\r\n\r\n            // 进入客服\r\n            chat_entry_handle(url) {\r\n                if((url || null) == null) {\r\n                    this.showToast(\"客服地址有误\");\r\n                } else {\r\n                    // 拼接基础参数\r\n                    url = this.request_params_handle(url);\r\n\r\n                    // 拼接当前页面地址\r\n                    var route = this.current_page();\r\n                    url += '&source='+encodeURIComponent(base64.encode(route).replace(new RegExp(/=/g), ''));\r\n\r\n                    // 打开webview\r\n                    this.open_web_view(url);\r\n                }\r\n            },\r\n            \r\n            // 用户自动登录处理\r\n            user_auto_login_handle() {\r\n                // #ifdef H5\r\n                var user = this.get_user_cache_info() || null;\r\n                if(user == null) {\r\n                    var params = this.get_launch_cache_info() || {};\r\n                    var config = this.get_config('plugins_base.thirdpartylogin.data') || null;\r\n                    var data = this.get_config('plugins_thirdpartylogin_data') || null;\r\n                    var url = null;\r\n                    // 是否微信环境\r\n                    if((params.thirdpartylogin || null) == null && config != null && data != null && this.is_weixin_env()) {\r\n                        var is_auto = config.weixin_is_env_auto_login || 0;\r\n                        var weixin = data.weixin || null;\r\n                        if(is_auto != 0 && weixin != null) {\r\n                            url = weixin.login_url;\r\n                        }\r\n                    }\r\n\r\n                    // 存在登录url则跳转登录\r\n                    if(url != null) {\r\n                        // 上一个页面记录\r\n                        var page = this.current_page();\r\n                        if(page != null) {\r\n                            uni.setStorageSync(this.data.cache_prev_page_key, page);\r\n                        }\r\n\r\n                        // 跳转登录\r\n                        window.location.href = url;\r\n                    }\r\n                }\r\n                // #endif\r\n            },\n\n            // 清除用户缓存\n            remove_user_cache_event() {\n                // 用户登录缓存\n                uni.removeStorageSync(this.data.cache_user_login_key);\n                // 用户信息缓存\n                uni.removeStorageSync(this.data.cache_user_info_key);\n\n                // 非小程序则两秒后回到首页\n                this.showToast('清除成功', 'success');\n                var url = this.data.tabbar_pages[0];\n                setTimeout(function() {\n                    uni.switchTab({url: url});\n                }, 1500);\n            }\r\n        },\r\n\r\n        /**\r\n         * 小程序初始化\r\n         */\r\n        onLaunch(params) {},\r\n        \r\n        /**\r\n         * 小程序页面显示\r\n         */\r\n        onShow(params) {\r\n            // 初始化配置\r\n            this.globalData.init_config();\r\n\r\n            // 设置设备信息\r\n            this.globalData.set_system_info();\r\n\r\n            // 参数处理+缓存\r\n            this.globalData.set_launch_cache_info(params);\r\n\r\n            // 场景值\r\n            this.globalData.set_scene_data(params);\r\n        },\r\n\r\n        methods: {}\r\n    };\r\n</script>\r\n<style>\r\n    @import './common/css/page.css';\r\n    @import './common/css/business.css';\r\n    @import './common/css/plugins.css';\r\n    @import './common/css/lib.css';\r\n    @import './common/css/theme/yellow.css';\r\n</style>","import mod from \"-!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\mini-css-extract-plugin\\\\dist\\\\loader.js??ref--6-oneOf-1-0!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js??ref--6-oneOf-1-1!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\stylePostLoader.js!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--6-oneOf-1-2!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\postcss-loader\\\\src\\\\index.js??ref--6-oneOf-1-3!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\mini-css-extract-plugin\\\\dist\\\\loader.js??ref--6-oneOf-1-0!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js??ref--6-oneOf-1-1!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\stylePostLoader.js!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--6-oneOf-1-2!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\postcss-loader\\\\src\\\\index.js??ref--6-oneOf-1-3!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HB\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./App.vue?vue&type=style&index=0&lang=css&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1678688330456\n      var cssReload = require(\"D:/HB/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"../../\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}